import React from 'react'
import EntryPermit from '../components/accountComponent/EntryPermit'
import ProductAndPricing from '../components/accountComponent/ProductAndPricing'
import StorageTanks from '../components/accountComponent/StorageTanks'
import Trucks from '../components/accountComponent/Trucks'

export default function AccountTab() {

    const [tab, setTab] = React.useState(0)

    return (
        <div className='w-full bg-[#F8F9FA] border-t border-l border-[#DDE2E5] h-full px-8 overflow-y-auto'> 
            <div className='w-full h-auto px-8  mb-10 flex flex-col'> 
                <div className='p-1 my-4 bg-[rgba(224,224,224,0.5)] mx-auto rounded-xl flex' style={{boxShadow: 'inset 0px 1px 2px rgba(97, 97, 97, 0.2), inset 0px 2px 4px rgba(97, 97, 97, 0.2)'}}  >
                    <div onClick={()=> setTab(0)} className={tab === 0 ? 'w-auto px-2 bg-white cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center' : 'px-2 cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center'} >
                        <svg className='mr-1' width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M6.84315 19.521C3.71895 16.3968 3.71895 11.3315 6.84315 8.2073L12.5 2.55044L18.1569 8.2073C21.281 11.3315 21.281 16.3968 18.1569 19.521C15.0327 22.6452 9.96734 22.6452 6.84315 19.521Z" stroke={tab !== 0 ? '#ACB5BD': '#F88C3A'} stroke-width="2"/>
                        </svg>Product & Pricing
                    </div>
                    <div onClick={()=> setTab(1)} className={tab === 1 ? 'w-auto px-2 bg-white cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center' : 'px-2 cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center'} >
                        <svg className='mr-2' width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1.3 12.014H1.29974L1.30026 12.0241C1.32226 12.4586 1.37738 12.8906 1.47767 13.3029L1.47766 13.3029L1.47797 13.3041C1.61242 13.8419 1.95575 14.6139 2.30732 15.0793C2.3285 15.108 2.35047 15.1387 2.37322 15.1705C2.4383 15.2616 2.50981 15.3616 2.58761 15.4481L2.58787 15.4484C3.15202 16.0728 3.62448 16.4964 4.43663 16.8717C5.18551 17.2205 5.78698 17.3914 6.62132 17.4144V19.4307H1.79025C1.71513 19.4307 1.64861 19.4578 1.6005 19.4844C1.54963 19.5125 1.50242 19.5495 1.4622 19.5893C1.42199 19.629 1.38408 19.6762 1.35509 19.7278C1.32741 19.7771 1.3 19.8445 1.3 19.921V21.4206C1.3 21.5229 1.32071 21.6188 1.36758 21.7034C1.41484 21.7886 1.48249 21.8511 1.55883 21.895C1.70387 21.9784 1.88349 21.9969 2.04288 21.9969H22.2532C22.4142 21.9969 22.5935 21.9766 22.7381 21.8924C22.9012 21.7975 22.996 21.6355 22.996 21.4206V19.921C22.996 19.8458 22.9689 19.7793 22.9423 19.7312C22.9142 19.6803 22.8773 19.6331 22.8375 19.5929C22.7978 19.5527 22.7506 19.5148 22.699 19.4858C22.6497 19.4581 22.5823 19.4307 22.5058 19.4307H17.6747V17.416C17.878 17.4135 18.0321 17.4058 18.1869 17.3859C18.3879 17.36 18.585 17.3143 18.8878 17.2393C19.3058 17.1375 19.8833 16.8985 20.2655 16.6681L20.2665 16.6675C20.6817 16.414 20.7773 16.3311 20.9162 16.2107C20.984 16.1519 21.0622 16.0842 21.1929 15.9832C21.695 15.5964 22.1446 14.9487 22.4678 14.2605C22.7913 13.5714 23.0014 12.8134 23.0014 12.1914V9.53071C23.0014 8.7477 22.7304 7.98119 22.496 7.44131C22.121 6.57014 21.4173 5.77634 20.5748 5.20058C19.7323 4.62485 18.7356 4.25665 17.765 4.25665H10.2323C10.2341 4.16803 10.2367 4.08404 10.2393 4.00354C10.2411 3.94401 10.2429 3.88639 10.2443 3.83022C10.2486 3.6498 10.2486 3.47917 10.2232 3.3349C10.1973 3.1878 10.1406 3.04089 10.0097 2.93662C9.88164 2.8346 9.71555 2.8 9.53036 2.8H6.95033C6.77947 2.8 6.60571 2.83744 6.47 2.94127C6.32619 3.05131 6.25044 3.21666 6.25044 3.41388V4.25803C5.42955 4.31251 4.5766 4.68682 3.98044 5.03034C3.24606 5.45086 2.45567 6.23487 2.04463 6.98938L2.04459 6.98936L2.04262 6.99317C2.01524 7.0461 1.98961 7.09045 1.96266 7.13708C1.9523 7.15501 1.94175 7.17327 1.93082 7.19249C1.8927 7.25957 1.85376 7.33222 1.81911 7.42043L1.81503 7.43052C1.55955 8.06386 1.3 8.7073 1.3 9.52534V12.014ZM3.64521 6.72232L3.64522 6.72233L3.64632 6.72122C3.68116 6.68639 3.71209 6.65445 3.74115 6.62445C3.80595 6.55755 3.86144 6.50026 3.93006 6.44193L3.93069 6.4414C4.01707 6.36736 4.10962 6.30054 4.20826 6.22934C4.22953 6.21398 4.25108 6.19842 4.27292 6.18254L4.27293 6.18256L4.27529 6.18079C4.3625 6.11538 4.43847 6.06798 4.52778 6.01225C4.56229 5.99072 4.59878 5.96795 4.63869 5.94242C4.72771 5.88642 4.79538 5.85692 4.88662 5.81715C4.92946 5.79847 4.97749 5.77753 5.03537 5.75052L5.03538 5.75053L5.0374 5.74956C5.55288 5.50193 6.23681 5.3554 7.03095 5.3554H13.5606H13.5617L17.8487 5.40378H17.851C18.1587 5.40378 18.4793 5.48245 18.7403 5.56591C18.7779 5.57844 18.8162 5.59071 18.8547 5.60303C18.9593 5.63653 19.0649 5.67033 19.1598 5.71048L19.1603 5.71068C20.0654 6.09083 20.7461 6.66895 21.2022 7.41755C21.6591 8.16751 21.8973 9.09993 21.8973 10.1972C21.8973 10.3663 21.8987 10.5324 21.9001 10.6958C21.909 11.7278 21.917 12.6539 21.5569 13.5521L21.5566 13.5528C21.3409 14.0972 21.0013 14.6117 20.596 15.017C19.6596 15.9534 18.5069 16.3183 17.0662 16.3183H7.25133C5.76406 16.3183 4.56065 15.8551 3.72965 15.0318C2.89896 14.2087 2.42026 13.0058 2.42026 11.4872V11.3802L2.40406 11.3694C2.40399 11.3081 2.40386 11.2472 2.40374 11.1866C2.4001 9.42664 2.39705 7.95114 3.64521 6.72232ZM2.40951 20.8497V20.5402H21.8982C21.8999 20.5858 21.8979 20.6456 21.8946 20.7291L21.8941 20.742C21.8927 20.7753 21.8913 20.8113 21.8901 20.8497H2.40951ZM7.73083 19.4307V17.4171H16.5652V19.4307H7.73083ZM7.39758 3.94176H9.07773V4.25127H7.39758V3.94176Z" fill={tab !== 1 ? '#ACB5BD': '#F88C3A'}  stroke={tab !== 1 ? '#ACB5BD': '#F88C3A'}  stroke-width="0.4"/>
                            <path d="M8.24664 9.29145C8.23998 9.30051 8.23323 9.3098 8.22641 9.31927C8.1753 9.39023 8.12519 9.46444 8.08546 9.5233C8.07296 9.54182 8.06148 9.55882 8.05132 9.57372L8.05016 9.57542L8.05015 9.57541C7.92759 9.75127 7.83822 9.88273 7.72242 10.0669C7.70555 10.0941 7.6886 10.1213 7.67162 10.1485C7.46162 10.4855 7.24718 10.8296 7.13268 11.1766C7.01222 11.5416 7.01191 11.8809 7.23759 12.1995L8.24664 9.29145ZM8.24664 9.29145C8.28823 9.34509 8.3362 9.41037 8.38885 9.48519C8.5282 9.68322 8.69543 9.94108 8.85639 10.2117C9.01757 10.4826 9.17035 10.7628 9.28211 11.0059C9.33804 11.1275 9.38233 11.2369 9.41229 11.3294C9.44333 11.4251 9.45447 11.4893 9.45447 11.5251C9.45447 12.6992 7.96121 13.2199 7.23764 12.1996L8.24664 9.29145ZM6.55965 13.1529L6.55963 13.1529L6.56214 13.1554L6.60514 13.1984L6.60511 13.1984L6.6081 13.2013C7.32208 13.8863 8.44031 14.1374 9.36418 13.5891L9.36437 13.589C10.3039 13.0299 10.8376 12.0087 10.4509 10.8901C10.3275 10.5314 9.93028 9.77381 9.51094 9.11272C9.30002 8.78022 9.07799 8.46327 8.87546 8.22718C8.77459 8.10959 8.67374 8.00635 8.57739 7.93081C8.48917 7.86165 8.37102 7.78828 8.24083 7.78828C7.94689 7.78828 7.78323 8.01257 7.7008 8.12553C7.69615 8.13191 7.69176 8.13793 7.68761 8.14353L7.68761 8.14353L7.68679 8.14466C7.60353 8.25896 7.52254 8.36717 7.44277 8.47374C7.22532 8.76427 7.01698 9.04262 6.7968 9.39891L6.79669 9.3991C6.67545 9.59578 6.45893 9.9505 6.27246 10.3262C6.17921 10.5141 6.09177 10.7106 6.02727 10.8977C5.96374 11.0821 5.91768 11.2708 5.91768 11.4391C5.91768 12.1174 6.06936 12.6448 6.55965 13.1529Z" fill={tab !== 1 ? '#ACB5BD': '#F88C3A'}  stroke={tab !== 1 ? '#ACB5BD': '#F88C3A'}  stroke-width="0.4"/>
                        </svg>
                        Storage Tanks
                    </div>
                    <div onClick={()=> setTab(2)} className={tab === 2 ? 'w-auto px-2 bg-white cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center' : 'px-2 cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center'} >
                        <svg className='mr-2' width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M8.80801 17.5751H8.59372C8.15655 17.5751 7.68938 17.1079 7.68938 16.6708V16.4565C7.68938 15.955 8.15655 15.5093 8.76515 15.5093C9.54948 15.5093 10.1152 16.5636 9.48519 17.2622C9.3609 17.3994 9.0566 17.5751 8.80801 17.5751ZM1.50049 10.5333V10.1176C1.5262 9.63755 1.64192 9.16181 1.85622 8.73322C2.47768 7.48601 3.74632 6.56882 5.15211 6.56882H8.03226V6.22595C8.03226 5.83593 8.33227 5.5402 8.71801 5.5402C10.2481 5.5402 10.7795 5.31733 10.7795 6.57311H13.6597C14.2254 6.57311 14.7269 6.76169 15.1469 6.93313C15.4726 7.07028 15.9998 7.46458 16.2313 7.70031C16.8784 8.36034 17.3156 9.34182 17.3156 10.3147C17.3156 11.4076 16.977 11.9862 16.4541 12.7663H18.0013V9.62898C18.0013 9.11895 18.1385 8.63893 18.73 8.63893H21.7815C22.0944 8.63893 22.3301 9.06324 21.9101 9.28182C22.0601 9.59041 22.553 11.2662 22.7502 11.7934C22.883 12.1491 23.5002 12.3763 23.5002 12.9806V15.9465C23.5002 16.2636 23.1488 16.5465 22.8145 16.5465H21.4387C21.4387 18.5266 18.7342 18.8866 18.1256 17.1079C18.0871 16.9922 18.0999 16.8894 17.9585 16.8894H10.4795C10.3252 16.8894 10.3595 16.9794 10.3209 17.1165C10.2824 17.2494 10.2695 17.2794 10.2052 17.3865C9.67806 18.2523 8.63229 18.5094 7.83939 18.0251C7.58223 17.8666 7.5008 17.7123 7.29936 17.5751C7.17078 17.8194 7.00363 17.9223 6.75505 18.0637C6.13787 18.4109 5.3364 18.3037 4.8178 17.8237C4.59065 17.6137 4.32492 17.2751 4.29063 16.8894C3.9949 16.8894 3.52345 16.9279 3.30487 16.8422C2.75627 16.6365 2.87199 16.0665 2.87199 15.5136H2.52911C2.10052 15.5136 1.98051 14.8278 2.65769 14.8278H4.93781V14.0949C4.05491 14.0949 3.05628 13.5292 2.49911 12.9249L2.12195 12.4448C1.74907 11.8834 1.53906 11.2148 1.50049 10.5376V10.5333ZM19.8572 17.5751H19.6429C19.1285 17.5751 18.6957 17.0651 18.6957 16.5422C18.6957 15.2607 20.6629 15.1107 20.7786 16.4779C20.8215 17.0137 20.4015 17.5751 19.8572 17.5751ZM5.97501 15.5136C6.29645 15.5136 6.53647 15.6593 6.71647 15.8436C7.36794 16.5165 6.81934 17.5751 6.06073 17.5751H5.84643C4.65065 17.5751 4.56922 15.5136 5.97501 15.5136ZM10.1024 15.5136H18.3571C18.2928 15.7493 18.1085 15.8479 18.0999 16.1993H10.4924C10.3595 16.1993 10.3638 16.0407 10.1581 15.6293L10.1067 15.5093L10.1024 15.5136ZM4.29921 16.1993H3.52345V15.5136H4.59922C4.48779 15.6807 4.32064 15.9507 4.29921 16.1993ZM13.8868 14.0949C14.864 14.0949 15.5669 13.452 15.8198 13.452H18.0099V14.8278H13.8826V14.0949H13.8868ZM5.58927 14.1378H13.1968V14.8235H5.58927V14.1378ZM20.0757 10.7005H21.7087C21.7258 10.8848 21.863 11.2276 21.9187 11.3948C21.9916 11.6177 22.0858 11.8534 22.1373 12.0763H20.0757V10.7005ZM19.4329 10.2719V12.162C19.4329 12.3934 19.66 12.6291 19.8357 12.7063C20.1015 12.822 22.3559 12.762 22.7459 12.762C22.9302 13.1092 22.8745 13.3192 22.8745 13.7949C22.6259 13.7949 22.1887 13.7435 22.1887 14.1378C22.1887 14.545 22.5959 14.4807 22.8745 14.4807V15.8564H21.2844C21.2415 15.6679 21.1429 15.5564 21.0315 15.4193C20.4915 14.7464 19.5271 14.8235 18.7042 14.8235V9.32039H21.2415L21.4644 10.0061H19.78C19.6257 10.019 19.4371 10.1133 19.4371 10.2633L19.4329 10.2719ZM4.94638 13.452C4.50493 13.3492 4.2692 13.3406 3.82775 13.1092C3.51916 12.9463 3.23629 12.7234 3.00057 12.4748C2.49054 11.9477 2.15195 11.0776 2.15195 10.3576C2.15195 8.82751 3.38201 7.39172 4.94638 7.26314C4.94638 7.5503 4.88638 8.01747 5.0321 8.16748C5.20782 8.35606 5.59356 8.2832 5.59356 7.94889V7.26314H13.2011V7.82032C13.2011 8.16748 13.4497 8.39892 13.724 8.21891C13.964 8.06033 13.8868 7.64459 13.8868 7.26314C14.2126 7.28886 14.6969 7.45172 14.9498 7.57602C15.8841 8.04318 16.6384 9.10181 16.6384 10.1433C16.6384 11.3176 16.3555 12.0977 15.4169 12.8349C15.1212 13.0663 14.8383 13.2077 14.4869 13.3235C14.2854 13.3877 14.0969 13.4092 13.8911 13.4563V9.84756C13.8911 9.61612 13.9897 8.98609 13.5483 8.98609C13.3082 8.98609 13.2054 9.20896 13.2054 9.45754V13.4563H5.59784V9.24325C5.59784 9.13181 5.40926 8.98609 5.34069 8.98609C4.87781 8.98609 4.95495 9.35468 4.95495 9.8047V13.4563L4.94638 13.452ZM8.73087 6.23023H10.1067V6.57311H8.73087V6.23023Z" fill={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke-width="0.2"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M8.37988 16.5464C8.37988 16.8721 8.84705 17.0436 9.0142 16.7007C9.26279 16.195 8.37988 16.0321 8.37988 16.5464Z" fill={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke-width="0.2"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M5.62744 16.5039C5.62744 17.2153 6.5832 16.8082 6.21461 16.3496C6.01318 16.101 5.62744 16.2939 5.62744 16.5039Z" fill={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke-width="0.2"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M19.4247 16.5467C19.4247 17.001 20.0676 17.0224 20.0676 16.5038C20.0676 16.3409 19.8619 16.2209 19.729 16.2252C19.5404 16.2338 19.4204 16.3452 19.4204 16.5467H19.4247Z" fill={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke={tab !== 2 ? '#ACB5BD': '#F88C3A'} stroke-width="0.2"/>
                        </svg>
                        Trucks
                    </div>
                    <div onClick={()=> setTab(3)} className={tab === 3 ? 'w-auto px-2 bg-white cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center' : 'px-2 cursor-pointer h-10 font-Inter-Regular rounded-xl flex justify-center items-center'} >
                        <svg className='mr-2' width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5 4H8.5V6H16.5V4ZM6.5 6H2.5V18H6.5V22H18.5V18H22.5V6H18.5V2H6.5V6ZM4.5 16H6.5V14H18.5V16H20.5V8H4.5V16ZM16.5 16H8.5V20H16.5V16ZM16.5 10H18.5V12H16.5V10Z" fill={tab !== 3 ? '#ACB5BD': '#F88C3A'}/>
                        </svg>
                        Entry permit
                    </div> 
                </div>
                {tab === 0 && (
                    <ProductAndPricing />
                )}
                {tab === 1 && (
                    <StorageTanks />
                )}
                {tab === 2 && (
                    <Trucks />
                )}
                {tab === 3 && (
                    <EntryPermit />
                )}
            </div> 
        </div>
    )
} 